libc {
  GLIBC_2.0 {
    __errno_location_tls;
    __errstr_location_tls;
    ros_errno_loc;
    ros_errstr_loc;
    __errno_location;
    errstr;
    werrstr;
    ros_syscall_blockon;
    ros_syscall_sync;
    __ros_early_syscall_blockon;
    __ros_scp_simple_evq;
    __ros_syscall_noerrno;
    __ros_syscall_errno;

    set_tls_desc;
    get_tls_desc;
    allocate_tls;
    free_tls;
    reinit_tls;

	_sys_siglist;
	sys_siglist;
	sys_sigabbrev;
    signal_ops;
    trigger_posix_signal;

    init_empty_dir;
    convM2S;
    convS2M;
    sizeS2M;
    statcheck;
    convM2D;
    convD2M;
    sizeD2M;

    serialize_argv_envp;
    free_serialized_data;

    # helper functions from resolv (which we don't build)
    __h_errno_location;

	# Normally not exported by glibc, but we do all of our threading in
	# userspace and need to set this up for each of our uthreads that have TLS.
	__ctype_init;

    ufd_get_fd;
    ufd_lookup;

    register_close_cb;

    _sock_get_listen_fd;
    _sock_lookup_listen_fd;

    eventfd;
    eventfd_read;
    eventfd_write;

    # Weak symbols in parlib-compat.c
    __vcore_context;
    akaros_printf;
    akaros_vprintf;
    print_user_context;
    _assert_failed;
  }
}
